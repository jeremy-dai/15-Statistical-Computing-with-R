data[data$ir.is.na(),]
data[is.na(data$ir),]
#hist(data$ir))
checkdata <- data[is.na(data$ir),]
#hist(data$ir))
View(checkdata)
checkdata <- data[is.na(data$ir),]
summary(data$locations)
checkdata <- data[is.na(data$ir),]
summary(data$locations)
checkdata <- data[is.na(data$ir),]
data$locations
checkdata <- data[is.na(data$ir),]
summary(data$location)
checkdata <- data[is.na(data$ir),]
str(data$location)
checkdata <- data[is.na(data$ir),]
summary(data$location)
data <- data[!is.na(data$ir),]
hist(data$ir, freq = FALSE)
qqnorm(data$ir, main = expression("Q-Q plot for" ~~ {chi^2}[nu == 3]))
qqline(data$ir)
qqnorm(data$ir, main = expression("Q-Q plot for ir"))
qqline(data$ir)
mu <- mean(ir)
mu <- mean(data$ir)
std <- sqrt(var(data$ir))
data <- bloodsamples_data[!is.na(bloodsamples_data$sex),]
summary(data[,c('sex', 'age_years', 'hg', 'ir','creat')])
load("0_data/scr_exam_1_the-basics.Rdata")
data <- bloodsamples_data[!is.na(bloodsamples_data$sex),]
summary(data[,c('sex', 'age_years', 'hg', 'ir','creat')])
data$sex <- as.factor(data$sex)
#class(data$sex)
# var(data$hg,data$ir,na.rm = TRUE)
cor(data$hg,data$ir,use = 'complete.obs')
checkdata <- data[is.na(data$ir),]
# from different place but all for male -> not random
# data <- data[!is.na(data$ir),]
hist(data$ir, freq = FALSE)
qqnorm(data$ir, main = expression("Q-Q plot for ir"))
qqline(data$ir)
mu <- mean(data$ir)
std <- sqrt(var(data$ir))
set.seed(123)
set.seed(123)
rnorm(sum(is.na(data$ir)),mu,std)
set.seed(123)
sum(is.na(data$ir))
#rnorm(,mu,std)
set.seed(123)
n_missing <- sum(is.na(data$ir))
rnorm(n_missing,mu,std)
mu <- mean(data$ir, na.rm = TRUE)
std <- sqrt(var(data$ir, na.rm = TRUE))
set.seed(123)
n_missing <- sum(is.na(data$ir))
rnorm(n_missing,mu,std)
set.seed(123)
n_missing <- sum(is.na(data$ir))
data[is.na(data$ir),'ir'] <- rnorm(n_missing,mu,std)
set.seed(123)
n_missing <- sum(is.na(data$ir))
data[is.na(data$ir),'ir'] <- rnorm(n_missing,mu,std)
summary(data$ir) #check
load("0_data/scr_exam_1_the-basics.Rdata")
data <- bloodsamples_data[!is.na(bloodsamples_data$sex),]
summary(data[,c('sex', 'age_years', 'hg', 'ir','creat')])
data$sex <- as.factor(data$sex)
#class(data$sex)
# var(data$hg,data$ir,na.rm = TRUE)
cor(data$hg,data$ir,use = 'complete.obs')
checkdata <- data[is.na(data$ir),]
# from different place but all for male -> not random
# data <- data[!is.na(data$ir),]
hist(data$ir, freq = FALSE)
qqnorm(data$ir, main = expression("Q-Q plot for ir"))
qqline(data$ir)
mu <- mean(data$ir, na.rm = TRUE)
std <- sqrt(var(data$ir, na.rm = TRUE))
set.seed(123)
n_missing <- sum(is.na(data$ir))
ir_impute <- rnorm(n_missing,mu,std)
ir_ <- data$ir
ir[is.na(data$ir)] <- ir_impute
ir <- data$ir
ir[is.na(data$ir)] <- ir_impute
data$ir.imputed <- ir
summary(data) #check
cor(data$hg,data$ir.imputed,use = 'complete.obs')
a = 2
is.na(a)
a = NULL
is.na(a)
a = NA
is.na(a)
?formula
boxplot(data$ir)
?boxplot
boxplot(ir ~ sex + location ,data = data)
boxplot(ir ~ sex + location ,data = data,col=['pink','blue])
boxplot(ir ~ sex + location ,data = data,col=['pink','blue'])
boxplot(ir ~ sex + location ,data = data,col=c('pink','blue'))
boxplot(ir ~ sex + location ,data = data,col=c('pink','blue'), horizontal = TRUE)
boxplot(ir ~ sex + location ,data = data,col=c('pink','blue'), horizontal = TRUE, whisker = 0)
boxplot(ir ~ sex + location ,data = data,col=c('pink','blue'), horizontal = TRUE)
boxplot(ir ~ sex + location ,data = data,col=c('pink','blue'), horizontal = TRUE, range = 0)
boxplot(ir ~ sex + location ,data = data,col=c('pink','blue'), horizontal = TRUE, range = 0.5)
boxplot(ir ~ sex + location ,data = data,col=c('pink','blue'), horizontal = TRUE, range = 0.25)
boxplot(ir ~ sex + location ,data = data,col=c('pink','blue'), horizontal = TRUE, range = 0.2)
boxplot(ir ~ sex + location ,data = data,col=c('pink','blue'), horizontal = TRUE, range = 0.1)
boxplot(ir ~ sex + location ,data = data,col=c('pink','blue'), horizontal = TRUE, range = 0.2)
boxplot(ir ~ sex + location ,data = data,col=c('pink','blue'), horizontal = TRUE, range = 1)
boxplot(ir ~ sex + location ,data = data,col=c('pink','blue'), horizontal = TRUE, range = -1)
boxplot(ir ~ sex + location ,data = data,col=c('pink','blue'), horizontal = TRUE, range = 0)
boxplot(ir ~ sex + location ,data = data,col=c('pink','blue'), horizontal = TRUE, range = 0.5)
boxplot(ir ~ sex + location ,data = data,col=c('pink','blue'), horizontal = TRUE, range = 0.75)
boxplot(ir ~ sex + location ,data = data,col=c('pink','blue'), horizontal = TRUE, range = 0.2)
boxplot(ir ~ sex + location ,data = data,col=c('pink','blue'), horizontal = TRUE, range = 0.1)
boxplot(ir ~ sex + location ,data = data,col=c('pink','blue'), horizontal = TRUE, range = 0.01)
boxplot(ir ~ sex + location ,data = data,col=c('pink','blue'), horizontal = TRUE, range = 0.0001)
boxplot(ir ~ sex + location ,data = data,col=c('pink','blue'), horizontal = TRUE, range = 0.0001)
legend(c('male','female'))
boxplot(ir ~ sex + location ,data = data,col=c('pink','blue'), horizontal = TRUE, range = 0.0001)
legend( x = 'topright', legend = c('male','female'), lty = 1, col = c('pink','blue'))
boxplot(ir ~ sex + location ,data = data,col=c('pink','blue'), horizontal = TRUE, xlab = mklab)
boxplot(ir ~ sex + location ,data = data,col=c('pink','blue'), horizontal = TRUE, xlab = 'mklab')
legend( x = 'topright', legend = c('male','female'), lty = 1, col = c('pink','blue'))
boxplot(ir ~ sex + location ,data = data,col=c('pink','blue'), horizontal = TRUE, outwex=1)
legend( x = 'topright', legend = c('male','female'), lty = 1, col = c('pink','blue'))
boxplot(ir ~ sex + location ,data = data,col=c('pink','blue'), horizontal = TRUE)
legend( x = 'topright', legend = c('male','female'), lty = 1, col = c('pink','blue'))
boxplot(ir ~ sex + location ,data = data,col=c('pink','blue'), horizontal = TRUE,las=2)
legend( x = 'topright', legend = c('male','female'), lty = 1, col = c('pink','blue'))
boxplot(ir ~ sex + location ,data = data,col=c('pink','blue'), horizontal = TRUE,las=1)
legend( x = 'topright', legend = c('male','female'), lty = 1, col = c('pink','blue'))
boxplot(ir ~ sex + location ,data = data,col=c('pink','blue'), horizontal = TRUE,las=0.5)
legend( x = 'topright', legend = c('male','female'), lty = 1, col = c('pink','blue'))
boxplot(ir ~ sex + location ,data = data,col=c('pink','blue'), horizontal = TRUE,las=5)
boxplot(ir ~ sex + location ,data = data,col=c('pink','blue'), horizontal = TRUE,las=4)
boxplot(ir ~ sex + location ,data = data,col=c('pink','blue'), horizontal = TRUE,las=3)
legend( x = 'topright', legend = c('male','female'), lty = 1, col = c('pink','blue'))
boxplot(ir ~ sex + location ,data = data,col=c('pink','blue'), horizontal = TRUE,las=2)
legend( x = 'topright', legend = c('male','female'), lty = 1, col = c('pink','blue'))
boxplot(ir ~ sex + location ,data = data,col=c('pink','blue'), horizontal = TRUE,las=1)
legend( x = 'topright', legend = c('male','female'), lty = 1, col = c('pink','blue'))
boxplot(ir ~ sex + location ,data = data,col=c('pink','blue'), horizontal = TRUE,srt=45, adj=1, xpd=TRUE)
legend( x = 'topright', legend = c('male','female'), lty = 1, col = c('pink','blue'))
boxplot(ir ~ sex + location ,data = data,col=c('pink','blue'), horizontal = TRUE)
legend( x = 'topright', legend = c('male','female'), lty = 1, col = c('pink','blue'))
boxplot(ir ~ sex + location ,data = data,col=c('pink','blue'), horizontal = TRUE,cex=0.2)
legend( x = 'topright', legend = c('male','female'), lty = 1, col = c('pink','blue'))
boxplot(ir ~ sex + location ,data = data,col=c('pink','blue'), horizontal = TRUE,cex=0.1)
legend( x = 'topright', legend = c('male','female'), lty = 1, col = c('pink','blue'))
boxplot(ir ~ sex + location ,data = data,col=c('pink','blue'), horizontal = TRUE,cex=0.05)
legend( x = 'topright', legend = c('male','female'), lty = 1, col = c('pink','blue'))
boxplot(ir ~ sex + location ,data = data,col=c('pink','blue'), horizontal = TRUE,cex=0.05)
axis(1,cex.axis=0.5)
legend( x = 'topright', legend = c('male','female'), lty = 1, col = c('pink','blue'))
boxplot(ir ~ sex + location ,data = data,col=c('pink','blue'), horizontal = TRUE,cex=0.05)
axis(2,cex.axis=0.5)
legend( x = 'topright', legend = c('male','female'), lty = 1, col = c('pink','blue'))
boxplot(ir ~ sex + location ,data = data,col=c('pink','blue'), horizontal = TRUE,cex=0.05,las = 2)
legend( x = 'topright', legend = c('male','female'), lty = 1, col = c('pink','blue'))
boxplot(ir ~ sex + location ,data = data,col=c('pink','blue'), horizontal = TRUE,cex=0.01,las = 2)
legend( x = 'topright', legend = c('male','female'), lty = 1, col = c('pink','blue'))
?tapply
?table
table(data)
table(ir ~ sex + location, data =data)
with(data, table(ir,sex ,location))
#tapply()
with(data, table(sex ,location,ir))
#tapply()
?tapply()
with(data, tapply(sex,c(location,ir), mean)
#tapply()
with(data, tapply(sex,c(location,ir), mean))
with(data, tapply(sex,location, mean))
#tapply()
with(data, tapply(sex,location, mean(na.rm = TRUE)))
with(data, tapply(sex,location, mean,na.rm = TRUE))
#tapply()
?split
#with(data, tapply(sex,location, mean,na.rm = TRUE))
split(data$ir,data$sex)
#tapply()
#with(data, tapply(sex,location, mean,na.rm = TRUE))
split(data$ir,c(data$sex,data$location)
#tapply()
#with(data, tapply(sex,location, mean,na.rm = TRUE))
split(data$ir,c(data$sex,data$location))
#tapply()
#with(data, tapply(sex,location, mean,na.rm = TRUE))
data_split <- split(data$ir,c(data$sex,data$location))
#tapply()
View(data_split)
#with(data, tapply(sex,location, mean,na.rm = TRUE))
data_split <- split(data$ir,list(data$sex,data$location))
#tapply()
#with(data, tapply(sex,location, mean,na.rm = TRUE))
data_split <- split(data$ir,data$location)
#tapply()
#with(data, tapply(sex,location, mean,na.rm = TRUE))
data$location <- as.factor(data$location)
data_split <- split(data$ir,data$location)
#tapply()
#with(data, tapply(sex,location, mean,na.rm = TRUE))
data$location <- as.factor(data$location)
data_split <- split(data$ir,data$location, drop = FALSE)
#tapply()
#with(data, tapply(sex,location, mean,na.rm = TRUE))
data$location <- as.factor(data$location)
data_split <- split(data$ir,data$location, drop = FALSE)
#tapply()
View(data_split)
#with(data, tapply(sex,location, mean,na.rm = TRUE))
data$location <- as.factor(data$location)
data_split <- split(data$ir,list(data$ir,data$location), drop = FALSE)
#tapply()
View(data_split)
#with(data, tapply(sex,location, mean,na.rm = TRUE))
data$location <- as.factor(data$location)
data_split <- split(data$ir,list(data$sex, data$location), drop = FALSE)
#tapply()
#with(data, tapply(sex,location, mean,na.rm = TRUE))
data$location <- as.factor(data$location)
data_split <- split(data$ir,list(data$sex, data$location), drop = FALSE)
tapply(data_split, mean)
class(data_split)
#with(data, tapply(sex,location, mean,na.rm = TRUE))
data$location <- as.factor(data$location)
data_split <- split(data$ir,list(data$sex, data$location), drop = FALSE)
tapply(data_split, mean)
?tapply
#with(data, tapply(sex,location, mean,na.rm = TRUE))
data$location <- as.factor(data$location)
data_split <- split(data$ir,list(data$sex, data$location), drop = FALSE)
tapply(data_split, sum)
#with(data, tapply(sex,location, mean,na.rm = TRUE))
data$location <- as.factor(data$location)
data_split <- split(data$ir,list(data$sex, data$location), drop = FALSE)
tapply(as.vector(data_split), sum)
#with(data, tapply(sex,location, mean,na.rm = TRUE))
data$location <- as.factor(data$location)
data_split <- split(data$ir,list(data$sex, data$location), drop = FALSE)
tapply(as.list(data_split), sum)
#with(data, tapply(sex,location, mean,na.rm = TRUE))
data$location <- as.factor(data$location)
data_split <- split(data$ir,list(data$sex, data$location), drop = FALSE)
mean(data_split, na.rm = TRUE)
#with(data, tapply(sex,location, mean,na.rm = TRUE))
data$location <- as.factor(data$location)
data_split <- split(data$ir,list(data$sex, data$location), drop = TRUE)
mean(data_split, na.rm = TRUE)
View(data_split)
#with(data, tapply(sex,location, mean,na.rm = TRUE))
data$location <- as.factor(data$location)
data_split <- split(data$ir,list(data$sex, data$location), drop = TRUE)
sapply(data_split, mean)
#with(data, tapply(sex,location, mean,na.rm = TRUE))
data$location <- as.factor(data$location)
data_split <- split(data$ir,list(data$sex, data$location), drop = TRUE)
sapply(data_split, mean, na.rm=TRUE)
#with(data, tapply(sex,location, mean,na.rm = TRUE))
data$location <- as.factor(data$location)
data_split <- split(data$ir,list(data$sex, data$location), drop = TRUE)
sapply(data_split, mean)
tapply(data$ir, data$sex, mean)
tapply(data$ir, data$sex, mean(rm.na=TRUE))
tapply(data$ir, data$sex, mean,rm.na=TRUE)
?tapply
tapply(data$ir, list(data$sex,data$location), mean)
tapply(data$ir, list(data$sex,data$location), mean,na.rm=TRUE)
all.equal(M, means_exercise_a)
M <- tapply(data$ir, list(data$sex,data$location), mean,na.rm=TRUE)
all.equal(M, means_exercise_a)
M
M['male','Arnhem']
fillin <- function(data){
for (r in nrow(data)){
print(data[r,])
break
}
}
M['male','Arnhem']
fillin <- function(data){
for (r in nrow(data)){
print(data[r,])
break
}
}
fillin(data)
M['male','Arnhem']
fillin <- function(row){
if (is.na(row$ir))
row$ir <- M[row$sex,row$location]}
return(row)
fillin <- function(row){
if (is.na(row$ir)){
row$ir <- M[row$sex,row$location]}
return(row)
}
?copy
?copy()
bloodsamples_data_imputed <- copy(bloodsamples_data)
bloodsamples_data_imputed <- data.frame(bloodsamples_data)
bloodsamples_data_imputed <- data.frame(bloodsamples_data)
for (row in bloodsamples_data_imputed){row <- fillin(row)}
for (row in bloodsamples_data_imputed){print(row)}
for (row in bloodsamples_data_imputed){print(row); break}
for (row in bloodsamples_data_imputed){
print(row)
break}
for (row in nrow(bloodsamples_data_imputed){
for (row in nrow(bloodsamples_data_imputed)){
print(bloodsamples_data_imputed[row,])
break}
for (row in nrow(bloodsamples_data_imputed)){
row <- fillin(row)}
for (row in nrow(bloodsamples_data_imputed)){
row <- fillin(bloodsamples_data_imputed[row])}
for (row in nrow(bloodsamples_data_imputed)){
row <- fillin(bloodsamples_data_imputed[row,])}
cor(data$hg,data$ir,use = 'complete.obs')
ImputedCor <- function(hg, ir, mu, std){
n_missing <- sum(is.na(ir))
ir_impute <- rnorm(n_missing,mu,std)
ir[is.na(ir)] <- ir_impute
return(cor(ir,hg,use = 'complete.obs')
}
ImputedCor <- function(hg, ir, mu, std){
n_missing <- sum(is.na(ir))
ir_impute <- rnorm(n_missing,mu,std)
ir[is.na(ir)] <- ir_impute
return(cor(ir,hg,use = 'complete.obs'))
}
set.seed(123)
ImputedCor(data$hg,data$ir,mu,std)
rep_results <- replicate(1000,ImputedCor(data$hg,data$ir,mu,std))
for (row in bloodsamples_data_imputed){print(row); break}
rep_results
rep_results <- replicate(1000,ImputedCor(data$hg,data$ir,mu,std))
mean(rep_results)
set.seed(123)
ImputedCor(data$hg,data$ir,mu,std)
readline(prompt = 'type in your so')
readline(prompt = 'type in your so\n')
repeat{
d<- readline(prompt = 'type in your answer below, "EXIT" if you want to quit\n')
if (d=='EXIT){break}
}
repeat{
d <- readline(prompt = 'type in your answer below, "EXIT" if you want to quit\n')
if (d=='EXIT'){break}
}
repeat{
d <- readline(prompt = 'type in your answer below, "EXIT" if you want to quit \n')
if (d=='EXIT'){break}
}
d
for (row in nrow(bloodsamples_data_imputed)){
row <- fillin(bloodsamples_data_imputed[row,])}
load("0_data/scr_exam_1_the-basics.Rdata")
data <- bloodsamples_data[!is.na(bloodsamples_data$sex),]
summary(data[,c('sex', 'age_years', 'hg', 'ir','creat')])
data$sex <- as.factor(data$sex)
#class(data$sex)
# var(data$hg,data$ir,na.rm = TRUE)
cor(data$hg,data$ir,use = 'complete.obs')
checkdata <- data[is.na(data$ir),]
# from different place but all for male -> not random
# data <- data[!is.na(data$ir),]
hist(data$ir, freq = FALSE)
qqnorm(data$ir, main = expression("Q-Q plot for ir"))
qqline(data$ir)
mu <- mean(data$ir, na.rm = TRUE)
std <- sqrt(var(data$ir, na.rm = TRUE))
set.seed(123)
n_missing <- sum(is.na(data$ir))
ir_impute <- rnorm(n_missing,mu,std)
ir <- data$ir
ir[is.na(data$ir)] <- ir_impute
data$ir.imputed <- ir
summary(data) #check
cor(data$hg,data$ir.imputed,use = 'complete.obs')
boxplot(ir ~ sex + location ,data = data,col=c('pink','blue'), horizontal = TRUE ,las = 2)
legend( x = 'topright', legend = c('male','female'), lty = 1, col = c('pink','blue'))
#with(data, tapply(sex,location, mean,na.rm = TRUE))
data$location <- as.factor(data$location)
data_split <- split(data$ir,list(data$sex, data$location), drop = TRUE)
sapply(data_split, mean)
M <- tapply(data$ir, list(data$sex,data$location), mean,na.rm=TRUE)
fillin <- function(row){
if (is.na(row$ir)){
row$ir <- M[row$sex,row$location]}
return(row)
}
for (row in nrow(bloodsamples_data_imputed)){
row <- fillin(bloodsamples_data_imputed[row,])}
cor(data$hg,data$ir,use = 'complete.obs')
ImputedCor <- function(hg, ir, mu, std){
n_missing <- sum(is.na(ir))
ir_impute <- rnorm(n_missing,mu,std)
ir[is.na(ir)] <- ir_impute
return(cor(ir,hg,use = 'complete.obs'))
}
rep_results <- replicate(1000,ImputedCor(data$hg,data$ir,mu,std))
mean(rep_results)
set.seed(123)
ImputedCor(data$hg,data$ir,mu,std)
repeat{
d <- readline(prompt = 'type in your answer below, "EXIT" if you want to quit \n')
if (d=='EXIT'){break}
}
save.image("~/GitHub/15 Statistical Computing with R/Exam1/Practice_Exam1/0_data/scr_exam_1_the-basics.RData")
EXIT
!is.na(bloodsamples_data$sex)
knitr::opts_chunk$set(echo = TRUE)
# power = 1 - P(false negative) = P(reject H0 when σ=3) = P(S>2|σ=3)
test = replicate(10000,rnorm(5,0,3))
std = sqrt(apply(test,2,var))
power_test= mean(std>2)
power_test
# power = 1 - P(false negative) = P(reject H0 when σ=3) = P(S>2|σ=3)
test = replicate(10000,rnorm(5,0,3))
std = sqrt(apply(test,2,var))
power_test= mean(std>2)
power_test
load("0_data/scr_exam_1_the-basics.Rdata")
bloodsamples_data <- bloodsamples_data[-which(is.na(bloodsamples_data$sex)), ]
summary(bloodsamples_data[, c("sex", "age_years", "hg", "ir", "creat")])
bloodsamples_data$sex <- as.factor(bloodsamples_data$sex)
cor(bloodsamples_data$hg, bloodsamples_data$ir, use="complete.obs") # pairwise.complete.obs is also ok.
table(is.na(bloodsamples_data$ir), bloodsamples_data$location)
table(is.na(bloodsamples_data$ir), bloodsamples_data$sex)
hist(bloodsamples_data$ir, breaks="FD", col='lightblue', freq=F) # breaks="FD" is optional
# or
hist_data <- hist(bloodsamples_data$ir, plot=FALSE, breaks="FD")
hist_data$counts <- hist_data$counts/sum(hist_data$counts)
plot(hist_data)
qqnorm(bloodsamples_data$ir, pch=16)
qqline(bloodsamples_data$ir, col='red')
ir.mean <- mean(bloodsamples_data$ir, na.rm = T)
ir.sd <- sd(bloodsamples_data$ir, na.rm = T)
n.missing <- sum(is.na(bloodsamples_data$ir))
set.seed(20170807)
ir.sample <- rnorm(n.missing, mean=ir.mean, sd=ir.sd)
ir.imputed <- bloodsamples_data$ir
ir.imputed[is.na(ir.imputed)] <- ir.sample
cor(bloodsamples_data$hg, ir.imputed)
boxplot(
formula = ir ~ sex + location,
data = bloodsamples_data,
col=c("blue", "pink"),
horizontal = TRUE,
staplewex = 1
)
legend("bottomleft", fill=c("blue", "pink"), legend=c("female", "male"))
boxplot(
formula = ir ~ sex + location,
data = bloodsamples_data,
col=c("blue", "pink"),
horizontal = TRUE,
staplewex = 2
)
legend("bottomleft", fill=c("blue", "pink"), legend=c("female", "male"))
boxplot(
formula = ir ~ sex + location,
data = bloodsamples_data,
col=c("blue", "pink"),
horizontal = TRUE,
staplewex = 3
)
legend("bottomleft", fill=c("blue", "pink"), legend=c("female", "male"))
boxplot(
formula = ir ~ sex + location,
data = bloodsamples_data,
col=c("blue", "pink"),
horizontal = TRUE,
#staplewex =
)
boxplot(
formula = ir ~ sex + location,
data = bloodsamples_data,
col=c("blue", "pink"),
horizontal = TRUE
#staplewex =
)
legend("bottomleft", fill=c("blue", "pink"), legend=c("female", "male"))
boxplot(
formula = ir ~ sex + location,
data = bloodsamples_data,
col=c("blue", "pink"),
horizontal = TRUE,
staplewex = 1
)
legend("bottomleft", fill=c("blue", "pink"), legend=c("female", "male"))
M['male,'Leeuwarden']
M['male','Leeuwarden']
M
matrix(1:9, nrow =3 )
data.frame(matrix(1:9, nrow =3))
data.frame(matrix(1:9, nrow =3))
a<-data.frame(matrix(1:9, nrow =3))
a
for (row in a){print(row)}
for (row in a){row = c(1,1,1)}
a
i=1; for (row in a){a[i,] = c(1,1,1) ; i=i+1}
a
?na.omit

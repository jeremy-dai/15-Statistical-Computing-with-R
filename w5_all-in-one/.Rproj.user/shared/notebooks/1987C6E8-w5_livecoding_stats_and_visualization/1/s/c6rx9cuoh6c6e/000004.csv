"0","demo(plotmath)
"
"1","

"
"1","	demo("
"1","plotmath"
"1",")
"
"1","	---- "
"1","~"
"1","~"
"1","~"
"1","~"
"1","~"
"1","~"
"1","~"
"1","~"
"1","
"
"1","
"
"1","> #  Copyright (C) 2002-2016 The R Core Team
> 
> require(datasets)"
"1","
"
"1","
"
"1","> require(grDevices); require(graphics)"
"1","
"
"1","
"
"1","> ## --- ""math annotation"" in plots :
> 
> ######
> # create tables of mathematical annotation functionality
> ######
> make.table <- function(nr, nc) {
+     savepar <- par(mar=rep(0, 4), pty=""s"")
+     plot(c(0, nc*2 + 1), c(0, -(nr + 1)),
+          type=""n"", xlab="""", ylab="""", axes=FALSE)
+     savepar
+ }"
"1","
"
"1","
"
"1","> get.r <- function(i, nr) {
+     i %% nr + 1
+ }"
"1","
"
"1","
"
"1","> get.c <- function(i, nr) {
+     i %/% nr + 1
+ }"
"1","
"
"1","
"
"1","> draw.title.cell <- function(title, i, nr) {
+     r <- get.r(i, nr)
+     c <- get.c(i, nr)
+     text(2*c - .5, -r, title)
+     rect((2*(c - 1) + .5), -(r - .5), (2*c + .5), -(r + .5))
+ }"
"1","
"
"1","
"
"1","> draw.plotmath.cell <- function(expr, i, nr, string = NULL) {
+     r <- get.r(i, nr)
+     c <- get.c(i, nr)
+     if (is.null(string)) {
+         string <- deparse(expr)
+         string <- substr(string, 12, nchar(string) - 1)
+     }
+     text((2*(c - 1) + 1), -r, string, col=""grey50"")
+     text((2*c), -r, expr, adj=c(.5,.5))
+     rect((2*(c - 1) + .5), -(r - .5), (2*c + .5), -(r + .5), border=""grey"")
+ }"
"1","
"
"1","
"
"1","> nr <- 20"
"1","
"
"1","
"
"1","> nc <- 2"
"1","
"
"1","
"
"1","> oldpar <- make.table(nr, nc)"
"1","
"
"1","
"
"1","> i <- 0"
"1","
"
"1","
"
"1","> draw.title.cell(""Arithmetic Operators"", i, nr); i <- i + 1"
"1","
"
"1","
"
"1","> draw.plotmath.cell(expression(x + y), i, nr); i <- i + 1"
"1","
"
"1","
"
"1","> draw.plotmath.cell(expression(x - y), i, nr); i <- i + 1"
"1","
"
"1","
"
"1","> draw.plotmath.cell(expression(x * y), i, nr); i <- i + 1"
"1","
"
"1","
"
"1","> draw.plotmath.cell(expression(x / y), i, nr); i <- i + 1"
"1","
"
"1","
"
"1","> draw.plotmath.cell(expression(x %+-% y), i, nr); i <- i + 1"
"1","
"
"1","
"
"1","> draw.plotmath.cell(expression(x %/% y), i, nr); i <- i + 1"
"1","
"
"1","
"
"1","> draw.plotmath.cell(expression(x %*% y), i, nr); i <- i + 1"
"1","
"
"1","
"
"1","> draw.plotmath.cell(expression(x %.% y), i, nr); i <- i + 1"
"1","
"
"1","
"
"1","> draw.plotmath.cell(expression(-x), i, nr); i <- i + 1"
"1","
"
"1","
"
"1","> draw.plotmath.cell(expression(+x), i, nr); i <- i + 1"
"1","
"
"1","
"
"1","> draw.title.cell(""Sub/Superscripts"", i, nr); i <- i + 1"
"1","
"
"1","
"
"1","> draw.plotmath.cell(expression(x[i]), i, nr); i <- i + 1"
"1","
"
"1","
"
"1","> draw.plotmath.cell(expression(x^2), i, nr); i <- i + 1"
"1","
"
"1","
"
"1","> draw.title.cell(""Juxtaposition"", i, nr); i <- i + 1"
"1","
"
"1","
"
"1","> draw.plotmath.cell(expression(x * y), i, nr); i <- i + 1"
"1","
"
"1","
"
"1","> draw.plotmath.cell(expression(paste(x, y, z)), i, nr); i <- i + 1"
"1","
"
"1","
"
"1","> draw.title.cell(""Radicals"", i, nr); i <- i + 1"
"1","
"
"1","
"
"1","> draw.plotmath.cell(expression(sqrt(x)), i, nr); i <- i + 1"
"1","
"
"1","
"
"1","> draw.plotmath.cell(expression(sqrt(x, y)), i, nr); i <- i + 1"
"1","
"
"1","
"
"1","> draw.title.cell(""Lists"", i, nr); i <- i + 1"
"1","
"
"1","
"
"1","> draw.plotmath.cell(expression(list(x, y, z)), i, nr); i <- i + 1"
"1","
"
"1","
"
"1","> draw.title.cell(""Relations"", i, nr); i <- i + 1"
"1","
"
"1","
"
"1","> draw.plotmath.cell(expression(x == y), i, nr); i <- i + 1"
"1","
"
"1","
"
"1","> draw.plotmath.cell(expression(x != y), i, nr); i <- i + 1"
"1","
"
"1","
"
"1","> draw.plotmath.cell(expression(x < y), i, nr); i <- i + 1"
"1","
"
"1","
"
"1","> draw.plotmath.cell(expression(x <= y), i, nr); i <- i + 1"
"1","
"
"1","
"
"1","> draw.plotmath.cell(expression(x > y), i, nr); i <- i + 1"
"1","
"
"1","
"
"1","> draw.plotmath.cell(expression(x >= y), i, nr); i <- i + 1"
"1","
"
"1","
"
"1","> draw.plotmath.cell(expression(x %~~% y), i, nr); i <- i + 1"
"1","
"
"1","
"
"1","> draw.plotmath.cell(expression(x %=~% y), i, nr); i <- i + 1"
"1","
"
"1","
"
"1","> draw.plotmath.cell(expression(x %==% y), i, nr); i <- i + 1"
"1","
"
"1","
"
"1","> draw.plotmath.cell(expression(x %prop% y), i, nr); i <- i + 1"
"1","
"
"1","
"
"1","> draw.plotmath.cell(expression(x %~% y), i, nr); i <- i + 1"
"1","
"
"1","
"
"1","> draw.title.cell(""Typeface"", i, nr); i <- i + 1"
"1","
"
"1","
"
"1","> draw.plotmath.cell(expression(plain(x)), i, nr); i <- i + 1"
"1","
"
"1","
"
"1","> draw.plotmath.cell(expression(italic(x)), i, nr); i <- i + 1"
"1","
"
"1","
"
"1","> draw.plotmath.cell(expression(bold(x)), i, nr); i <- i + 1"
"1","
"
"1","
"
"1","> draw.plotmath.cell(expression(bolditalic(x)), i, nr); i <- i + 1"
"1","
"
"1","
"
"1","> draw.plotmath.cell(expression(underline(x)), i, nr); i <- i + 1"
"1","
"
"1","
"
"1","> # Need fewer, wider columns for ellipsis ...
> nr <- 20"
"1","
"
"1","
"
"1","> nc <- 2"
"1","
"
"1","
"
"1","> make.table(nr, nc)"
"1","
"

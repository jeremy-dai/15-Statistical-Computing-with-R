"0","abline"
"1","function (a = NULL, b = NULL, h = NULL, v = NULL, reg = NULL, 
"
"1","    coef = NULL, untf = FALSE, ...) 
"
"1","{
"
"1","    int_abline <- function(a, b, h, v, untf, col = par(""col""), 
"
"1","        lty = par(""lty""), lwd = par(""lwd""), ...) .External.graphics(C_abline, 
"
"1","        a, b, h, v, untf, col, lty, lwd, ...)
"
"1","    if (!is.null(reg)) {
"
"1","        if (!is.null(a)) 
"
"1","            warning(""'a' is overridden by 'reg'"")
"
"1","        a <- reg
"
"1","    }
"
"1","    if (is.object(a) || is.list(a)) {
"
"1","        p <- length(coefa <- as.vector(coef(a)))
"
"1","        if (p > 2) 
"
"1","            warning(gettextf(""only using the first two of %d regression coefficients"", 
"
"1","                p), domain = NA)
"
"1","        islm <- inherits(a, ""lm"")
"
"1","        noInt <- if (islm) 
"
"1","            !as.logical(attr(stats::terms(a), ""intercept""))
"
"1","        else p == 1
"
"1","        if (noInt) {
"
"1","            a <- 0
"
"1","            b <- coefa[1L]
"
"1","        }
"
"1","        else {
"
"1","            a <- coefa[1L]
"
"1","            b <- if (p >= 2) 
"
"1","                coefa[2L]
"
"1","            else 0
"
"1","        }
"
"1","    }
"
"1","    if (!is.null(coef)) {
"
"1","        if (!is.null(a)) 
"
"1","            warning(""'a' and 'b' are overridden by 'coef'"")
"
"1","        a <- coef[1L]
"
"1","        b <- coef[2L]
"
"1","    }
"
"1","    int_abline(a = a, b = b, h = h, v = v, untf = untf, ...)
"
"1","    invisible()
"
"1","}
"
"1","<bytecode: 0x1091c23c8>
"
"1","<environment: namespace:graphics>
"
"0","lines"
"1","function (x, ...) 
"
"1","UseMethod(""lines"")
"
"1","<bytecode: 0x102507108>
"
"1","<environment: namespace:graphics>
"
"0","points"
"1","function (x, ...) 
"
"1","UseMethod(""points"")
"
"1","<bytecode: 0x102539438>
"
"1","<environment: namespace:graphics>
"
"0","add = TRUE"
"0","polygon"
"1","function (x, y = NULL, density = NULL, angle = 45, border = NULL, 
"
"1","    col = NA, lty = par(""lty""), ..., fillOddEven = FALSE) 
"
"1","{
"
"1","    ..debug.hatch <- FALSE
"
"1","    xy <- xy.coords(x, y, setLab = FALSE)
"
"1","    if (is.numeric(density) && all(is.na(density) | density < 
"
"1","        0)) 
"
"1","        density <- NULL
"
"1","    if (!is.null(angle) && !is.null(density)) {
"
"1","        polygon.onehatch <- function(x, y, x0, y0, xd, yd, ..debug.hatch = FALSE, 
"
"1","            ...) {
"
"1","            if (..debug.hatch) {
"
"1","                points(x0, y0)
"
"1","                arrows(x0, y0, x0 + xd, y0 + yd)
"
"1","            }
"
"1","            halfplane <- as.integer(xd * (y - y0) - yd * (x - 
"
"1","                x0) <= 0)
"
"1","            cross <- halfplane[-1L] - halfplane[-length(halfplane)]
"
"1","            does.cross <- cross != 0
"
"1","            if (!any(does.cross)) 
"
"1","                return()
"
"1","            x1 <- x[-length(x)][does.cross]
"
"1","            y1 <- y[-length(y)][does.cross]
"
"1","            x2 <- x[-1L][does.cross]
"
"1","            y2 <- y[-1L][does.cross]
"
"1","            t <- (((x1 - x0) * (y2 - y1) - (y1 - y0) * (x2 - 
"
"1","                x1))/(xd * (y2 - y1) - yd * (x2 - x1)))
"
"1","            o <- order(t)
"
"1","            tsort <- t[o]
"
"1","            crossings <- cumsum(cross[does.cross][o])
"
"1","            if (fillOddEven) 
"
"1","                crossings <- crossings%%2
"
"1","            drawline <- crossings != 0
"
"1","            lx <- x0 + xd * tsort
"
"1","            ly <- y0 + yd * tsort
"
"1","            lx1 <- lx[-length(lx)][drawline]
"
"1","            ly1 <- ly[-length(ly)][drawline]
"
"1","            lx2 <- lx[-1L][drawline]
"
"1","            ly2 <- ly[-1L][drawline]
"
"1","            segments(lx1, ly1, lx2, ly2, ...)
"
"1","        }
"
"1","        polygon.fullhatch <- function(x, y, density, angle, ..debug.hatch = FALSE, 
"
"1","            ...) {
"
"1","            x <- c(x, x[1L])
"
"1","            y <- c(y, y[1L])
"
"1","            angle <- angle%%180
"
"1","            if (par(""xlog"") || par(""ylog"")) {
"
"1","                warning(""cannot hatch with logarithmic scale active"")
"
"1","                return()
"
"1","            }
"
"1","            usr <- par(""usr"")
"
"1","            pin <- par(""pin"")
"
"1","            upi <- c(usr[2L] - usr[1L], usr[4L] - usr[3L])/pin
"
"1","            if (upi[1L] < 0) 
"
"1","                angle <- 180 - angle
"
"1","            if (upi[2L] < 0) 
"
"1","                angle <- 180 - angle
"
"1","            upi <- abs(upi)
"
"1","            xd <- cos(angle/180 * pi) * upi[1L]
"
"1","            yd <- sin(angle/180 * pi) * upi[2L]
"
"1","            if (angle < 45 || angle > 135) {
"
"1","                if (angle < 45) {
"
"1","                  first.x <- max(x)
"
"1","                  last.x <- min(x)
"
"1","                }
"
"1","                else {
"
"1","                  first.x <- min(x)
"
"1","                  last.x <- max(x)
"
"1","                }
"
"1","                y.shift <- upi[2L]/density/abs(cos(angle/180 * 
"
"1","                  pi))
"
"1","                x0 <- 0
"
"1","                y0 <- floor((min(y) - first.x * yd/xd)/y.shift) * 
"
"1","                  y.shift
"
"1","                y.end <- max(y) - last.x * yd/xd
"
"1","                while (y0 < y.end) {
"
"1","                  polygon.onehatch(x, y, x0, y0, xd, yd, ..debug.hatch = ..debug.hatch, 
"
"1","                    ...)
"
"1","                  y0 <- y0 + y.shift
"
"1","                }
"
"1","            }
"
"1","            else {
"
"1","                if (angle < 90) {
"
"1","                  first.y <- max(y)
"
"1","                  last.y <- min(y)
"
"1","                }
"
"1","                else {
"
"1","                  first.y <- min(y)
"
"1","                  last.y <- max(y)
"
"1","                }
"
"1","                x.shift <- upi[1L]/density/abs(sin(angle/180 * 
"
"1","                  pi))
"
"1","                x0 <- floor((min(x) - first.y * xd/yd)/x.shift) * 
"
"1","                  x.shift
"
"1","                y0 <- 0
"
"1","                x.end <- max(x) - last.y * xd/yd
"
"1","                while (x0 < x.end) {
"
"1","                  polygon.onehatch(x, y, x0, y0, xd, yd, ..debug.hatch = ..debug.hatch, 
"
"1","                    ...)
"
"1","                  x0 <- x0 + x.shift
"
"1","                }
"
"1","            }
"
"1","        }
"
"1","        if (missing(col) || is.null(col) || is.na(col)) 
"
"1","            col <- par(""fg"")
"
"1","        if (is.null(border)) 
"
"1","            border <- col
"
"1","        if (is.logical(border)) {
"
"1","            if (!is.na(border) && border) 
"
"1","                border <- col
"
"1","            else border <- NA
"
"1","        }
"
"1","        start <- 1
"
"1","        ends <- c(seq_along(xy$x)[is.na(xy$x) | is.na(xy$y)], 
"
"1","            length(xy$x) + 1)
"
"1","        num.polygons <- length(ends)
"
"1","        col <- rep_len(col, num.polygons)
"
"1","        if (length(border)) 
"
"1","            border <- rep_len(border, num.polygons)
"
"1","        if (length(lty)) 
"
"1","            lty <- rep_len(lty, num.polygons)
"
"1","        if (length(density)) 
"
"1","            density <- rep_len(density, num.polygons)
"
"1","        angle <- rep_len(angle, num.polygons)
"
"1","        i <- 1L
"
"1","        for (end in ends) {
"
"1","            if (end > start) {
"
"1","                if (is.null(density) || is.na(density[i]) || 
"
"1","                  density[i] < 0) 
"
"1","                  .External.graphics(C_polygon, xy$x[start:(end - 
"
"1","                    1)], xy$y[start:(end - 1)], col[i], NA, lty[i], 
"
"1","                    ...)
"
"1","                else if (density[i] > 0) {
"
"1","                  polygon.fullhatch(xy$x[start:(end - 1)], xy$y[start:(end - 
"
"1","                    1)], col = col[i], lty = lty[i], density = density[i], 
"
"1","                    angle = angle[i], ..debug.hatch = ..debug.hatch, 
"
"1","                    ...)
"
"1","                }
"
"1","                i <- i + 1
"
"1","            }
"
"1","            start <- end + 1
"
"1","        }
"
"1","        .External.graphics(C_polygon, xy$x, xy$y, NA, border, 
"
"1","            lty, ...)
"
"1","    }
"
"1","    else {
"
"1","        if (is.logical(border)) {
"
"1","            if (!is.na(border) && border) 
"
"1","                border <- par(""fg"")
"
"1","            else border <- NA
"
"1","        }
"
"1","        .External.graphics(C_polygon, xy$x, xy$y, col, border, 
"
"1","            lty, ...)
"
"1","    }
"
"1","    invisible()
"
"1","}
"
"1","<bytecode: 0x103693ce8>
"
"1","<environment: namespace:graphics>
"
"0","#e.g."
"0","x <- seq(-2, 2, by=0.01)"
"0","y <- x^2"
"0","plot(NULL, xlim=c(-2, 2), ylim=c(0, 4))"

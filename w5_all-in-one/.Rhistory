set.seed(99)
plot(-4:4, -4:4, type = "n")  # setting up coord. system
points(rnorm(200), rnorm(200), col = "red")
points(rnorm(100)/2, rnorm(100)/2, col = "blue", cex =1.5)
?points
set.seed(99)
plot(-4:4, -4:4, type = "n")  # setting up coord. system
points(rnorm(200), rnorm(200), col = "red")
points(rnorm(100)/2, rnorm(100)/2, col = "blue", pch = '.')
set.seed(99)
plot(-4:4, -4:4, type = "n")  # setting up coord. system
points(rnorm(200), rnorm(200), col = "red", pch = '+')
points(rnorm(100)/2, rnorm(100)/2, col = "blue", pch = '.')
observed_haircolours <- c("blonde" =  10, "brown" = 14, "black" = 3, "red" = 2)
plot(observed_haircolours)
dchisq(1:10, df=10)
x =seq(1,32.5, by=0.1)
plot()
x =seq(1,32.5, by=0.1)
plot(x,dchisq(x.df=10))
x =seq(1,32.5, by=0.1)
plot(x,dchisq(x,df=10))
x =seq(1,32.5, by=0.5)
plot(x,dchisq(x,df=10))
x =seq(1,32.5, by=0.5)
plot(x,dchisq(x,df=10),type = "l", xlab = "x value", ylab = "Density", ylim = c(0, 0.30), xlim = c(0, 32.5),
main = "chi-square distribution"  )
x =seq(1,32.5, by=0.5)
plot(x,dchisq(x,df=10),type = "l", xlab = "x value", ylab = "Density", ylim = c(0, 0.30), xlim = c(0, 32.5),
main = "chi-square distribution"  )
points(x,dchisq(x,df=5),type = "l", col = "red" )
x =seq(1,32.5, by=0.5)
plot(x,dchisq(x,df=10),type = "l", xlab = "x value", ylab = "Density", ylim = c(0, 0.30), xlim = c(0, 32.5),
main = "chi-square distribution"  )
points(x,dchisq(x,df=5),type = "l", col = "red" )
points(x,dchisq(x,df=3),type = "l", col = "green" )
curve(dchisq(x,df=5), 1:10)
?cruve
ï¼Ÿcurve
?curve
curve(dchisq(x,df=5),from =1, to = 30, n =100)
plot(NULL, type = "l",
xlab = "x value", ylab = "Density", ylim = c(0, 0.30), xlim = c(0, 32.5), main = "chi-square distribution"
)
degf <- c(1, 3, 5, 10)
colors <- c("red", "blue", "darkgreen", "black") labels <- c("df = 1", "df = 3", "df = 5", "df = 10")
plot(NULL, type = "l",
xlab = "x value", ylab = "Density", ylim = c(0, 0.30), xlim = c(0, 32.5), main = "chi-square distribution"
)
degf <- c(1, 3, 5, 10)
colors <- c("red", "blue", "darkgreen", "black")
labels <- c("df = 1", "df = 3", "df = 5", "df = 10")
for (i in 1:length(degf)) {
curve(dchisq(x,df=degf[i]),from =1, to = 30, n =100,col = colors[i])
}
legend("topright", inset = .05, labels, lty = rep(1, 4), col = colors)
plot(NULL, type = "l",
xlab = "x value", ylab = "Density", ylim = c(0, 0.30), xlim = c(0, 32.5), main = "chi-square distribution"
)
degf <- c(1, 3, 5, 10)
colors <- c("red", "blue", "darkgreen", "black")
labels <- c("df = 1", "df = 3", "df = 5", "df = 10")
for (i in 1:length(degf)) {
curve(dchisq(x,df=degf[i]),from =1, to = 30, n =100,col = colors[i])
par(new=TRUE)
}
legend("topright", inset = .05, labels, lty = rep(1, 4), col = colors)
plot(NULL, type = "l",
xlab = "x value", ylab = "Density", ylim = c(0, 0.30), xlim = c(0, 32.5), main = "chi-square distribution"
)
degf <- c(1, 3, 5, 10)
colors <- c("red", "blue", "darkgreen", "black")
labels <- c("df = 1", "df = 3", "df = 5", "df = 10")
for (i in 1:length(degf)) {
curve(dchisq(x,df=degf[i]),from =1, to = 30, n =100,col = colors[i], add= TRUE)
}
legend("topright", inset = .05, labels, lty = rep(1, 4), col = colors)
plot(NULL, type = "l",
xlab = "x value", ylab = "Density", ylim = c(0, 0.30), xlim = c(0, 32.5), main = "chi-square distribution"
)
degf <- c(1, 3, 5, 10)
colors <- c("red", "blue", "darkgreen", "black")
labels <- c("df = 1", "df = 3", "df = 5", "df = 10")
for (i in 1:length(degf)) {
curve(dchisq(x,df=degf[i]),from =1, to = 30, n =100,col = colors[i], add= TRUE)
}
par(new=TRUE)
hist(rchisq(1000,df=3))
legend("topright", inset = .05, labels, lty = rep(1, 4), col = colors)
?hist
plot(NULL, type = "l",
xlab = "x value", ylab = "Density", ylim = c(0, 0.30), xlim = c(0, 32.5), main = "chi-square distribution"
)
degf <- c(1, 3, 5, 10)
colors <- c("red", "blue", "darkgreen", "black")
labels <- c("df = 1", "df = 3", "df = 5", "df = 10")
for (i in 1:length(degf)) {
curve(dchisq(x,df=degf[i]),from =1, to = 30, n =100,col = colors[i], add= TRUE)
}
par(new=TRUE)
hist(rchisq(1000,df=3),axes = FALSE)
legend("topright", inset = .05, labels, lty = rep(1, 4), col = colors)
plot(NULL, type = "l",
xlab = "x value", ylab = "Density", ylim = c(0, 0.30), xlim = c(0, 32.5), main = "chi-square distribution"
)
degf <- c(1, 3, 5, 10)
colors <- c("red", "blue", "darkgreen", "black")
labels <- c("df = 1", "df = 3", "df = 5", "df = 10")
for (i in 1:length(degf)) {
curve(dchisq(x,df=degf[i]),from =1, to = 30, n =100,col = colors[i], add= TRUE)
}
par(new=TRUE)
hist(rchisq(1000,df=3),axes = FALSE, labels = FALSE)
legend("topright", inset = .05, labels, lty = rep(1, 4), col = colors)
plot(NULL, type = "l",
xlab = "x value", ylab = "Density", ylim = c(0, 0.30), xlim = c(0, 32.5), main = "chi-square distribution"
)
degf <- c(1, 3, 5, 10)
colors <- c("red", "blue", "darkgreen", "black")
labels <- c("df = 1", "df = 3", "df = 5", "df = 10")
for (i in 1:length(degf)) {
curve(dchisq(x,df=degf[i]),from =1, to = 30, n =100,col = colors[i], add= TRUE)
}
par(new=TRUE)
hist(rchisq(1000,df=3),axes = FALSE)
legend("topright", inset = .05, labels, lty = rep(1, 4), col = colors)
plot(NULL, type = "l",
xlab = "x value", ylab = "Density", ylim = c(0, 0.30), xlim = c(0, 32.5), main = "chi-square distribution"
)
degf <- c(1, 3, 5, 10)
colors <- c("red", "blue", "darkgreen", "black")
labels <- c("df = 1", "df = 3", "df = 5", "df = 10")
for (i in 1:length(degf)) {
curve(dchisq(x,df=degf[i]),from =1, to = 30, n =100,col = colors[i], add= TRUE)
}
par(new=TRUE)
hist(rchisq(1000,df=3),axes = FALSE, main='', xlab='', ylab='')
legend("topright", inset = .05, labels, lty = rep(1, 4), col = colors)
plot(NULL, type = "l",
xlab = "x value", ylab = "Density", ylim = c(0, 0.30), xlim = c(0, 32.5), main = "chi-square distribution"
)
degf <- c(1, 3, 5, 10)
colors <- c("red", "blue", "darkgreen", "black")
labels <- c("df = 1", "df = 3", "df = 5", "df = 10")
for (i in 1:length(degf)) {
curve(dchisq(x,df=degf[i]),from =1, to = 30, n =100,col = colors[i], add= TRUE)
}
par(new=TRUE)
hist(rchisq(1000,df=3, breaks=10),axes = FALSE, main='', xlab='', ylab='')
plot(NULL, type = "l",
xlab = "x value", ylab = "Density", ylim = c(0, 0.30), xlim = c(0, 32.5), main = "chi-square distribution"
)
degf <- c(1, 3, 5, 10)
colors <- c("red", "blue", "darkgreen", "black")
labels <- c("df = 1", "df = 3", "df = 5", "df = 10")
for (i in 1:length(degf)) {
curve(dchisq(x,df=degf[i]),from =1, to = 30, n =100,col = colors[i], add= TRUE)
}
par(new=TRUE)
hist(rchisq(1000,df=3,breaks=10),axes = FALSE, main='', xlab='', ylab='')
plot(NULL, type = "l",
xlab = "x value", ylab = "Density", ylim = c(0, 0.30), xlim = c(0, 32.5), main = "chi-square distribution"
)
degf <- c(1, 3, 5, 10)
colors <- c("red", "blue", "darkgreen", "black")
labels <- c("df = 1", "df = 3", "df = 5", "df = 10")
for (i in 1:length(degf)) {
curve(dchisq(x,df=degf[i]),from =1, to = 30, n =100,col = colors[i], add= TRUE)
}
par(new=TRUE)
hist(rchisq(1000,df=3),breaks=10, axes = FALSE, main='', xlab='', ylab='')
legend("topright", inset = .05, labels, lty = rep(1, 4), col = colors)
plot(NULL, type = "l",
xlab = "x value", ylab = "Density", ylim = c(0, 0.30), xlim = c(0, 32.5), main = "chi-square distribution"
)
degf <- c(1, 3, 5, 10)
colors <- c("red", "blue", "darkgreen", "black")
labels <- c("df = 1", "df = 3", "df = 5", "df = 10")
for (i in 1:length(degf)) {
curve(dchisq(x,df=degf[i]),from =1, to = 30, n =100,col = colors[i], add= TRUE)
}
par(new=TRUE)
hist(rchisq(1000,df=3),breaks=20, axes = FALSE, main='', xlab='', ylab='')
legend("topright", inset = .05, labels, lty = rep(1, 4), col = colors)
plot(NULL, type = "l",
xlab = "x value", ylab = "Density", ylim = c(0, 0.30), xlim = c(0, 32.5), main = "chi-square distribution"
)
degf <- c(1, 3, 5, 10)
colors <- c("red", "blue", "darkgreen", "black")
labels <- c("df = 1", "df = 3", "df = 5", "df = 10")
for (i in 1:length(degf)) {
curve(dchisq(x,df=degf[i]),from =1, to = 30, n =100,col = colors[i], add= TRUE)
}
par(new=TRUE)
hist(rchisq(1000,df=3),breaks=30, axes = FALSE, main='', xlab='', ylab='')
legend("topright", inset = .05, labels, lty = rep(1, 4), col = colors)
plot(NULL, type = "l",
xlab = "x value", ylab = "Density", ylim = c(0, 0.30), xlim = c(0, 32.5), main = "chi-square distribution"
)
degf <- c(1, 3, 5, 10)
colors <- c("red", "blue", "darkgreen", "black")
labels <- c("df = 1", "df = 3", "df = 5", "df = 10")
for (i in 1:length(degf)) {
curve(dchisq(x,df=degf[i]),from =1, to = 30, n =100,col = colors[i], add= TRUE)
}
par(new=TRUE)
hist(rchisq(1000,df=3),breaks=40, axes = FALSE, main='', xlab='', ylab='')
legend("topright", inset = .05, labels, lty = rep(1, 4), col = colors)
plot(NULL, type = "l",
xlab = "x value", ylab = "Density", ylim = c(0, 0.30), xlim = c(0, 32.5), main = "chi-square distribution"
)
degf <- c(1, 3, 5, 10)
colors <- c("red", "blue", "darkgreen", "black")
labels <- c("df = 1", "df = 3", "df = 5", "df = 10")
for (i in 1:length(degf)) {
curve(dchisq(x,df=degf[i]),from =1, to = 30, n =100,col = colors[i], add= TRUE)
}
par(new=TRUE)
hist(rchisq(1000,df=3),breaks=60, axes = FALSE, main='', xlab='', ylab='')
legend("topright", inset = .05, labels, lty = rep(1, 4), col = colors)
plot(NULL, type = "l",
xlab = "x value", ylab = "Density", ylim = c(0, 0.30), xlim = c(0, 32.5), main = "chi-square distribution"
)
degf <- c(1, 3, 5, 10)
colors <- c("red", "blue", "darkgreen", "black")
labels <- c("df = 1", "df = 3", "df = 5", "df = 10")
for (i in 1:length(degf)) {
curve(dchisq(x,df=degf[i]),from =1, to = 30, n =100,col = colors[i], add= TRUE)
}
par(new=TRUE)
hist(rchisq(1000,df=3),breaks=90, axes = FALSE, main='', xlab='', ylab='')
legend("topright", inset = .05, labels, lty = rep(1, 4), col = colors)
plot(NULL, type = "l",
xlab = "x value", ylab = "Density", ylim = c(0, 0.30), xlim = c(0, 32.5), main = "chi-square distribution"
)
degf <- c(1, 3, 5, 10)
colors <- c("red", "blue", "darkgreen", "black")
labels <- c("df = 1", "df = 3", "df = 5", "df = 10")
for (i in 1:length(degf)) {
curve(dchisq(x,df=degf[i]),from =1, to = 30, n =100,col = colors[i], add= TRUE)
}
par(new=TRUE)
hist(rchisq(1000,df=3),breaks = "fd", freq = FALSE,  axes = FALSE, main='', xlab='', ylab='')
legend("topright", inset = .05, labels, lty = rep(1, 4), col = colors)
plot(NULL, type = "l",
xlab = "x value", ylab = "Density", ylim = c(0, 0.30), xlim = c(0, 32.5), main = "chi-square distribution"
)
degf <- c(1, 3, 5, 10)
colors <- c("red", "blue", "darkgreen", "black")
labels <- c("df = 1", "df = 3", "df = 5", "df = 10")
for (i in 1:length(degf)) {
curve(dchisq(x,df=degf[i]),from =1, to = 30, n =100,col = colors[i], add= TRUE)
}
par(new=TRUE)
hist(rchisq(10000,df=3),breaks = "fd", freq = FALSE,  axes = FALSE, main='', xlab='', ylab='')
legend("topright", inset = .05, labels, lty = rep(1, 4), col = colors)
plot(NULL, type = "l",
xlab = "x value", ylab = "Density", ylim = c(0, 0.30), xlim = c(0, 32.5), main = "chi-square distribution"
)
degf <- c(1, 3, 5, 10)
colors <- c("red", "blue", "darkgreen", "black")
labels <- c("df = 1", "df = 3", "df = 5", "df = 10")
for (i in 1:length(degf)) {
curve(dchisq(x,df=degf[i]),from =1, to = 30, n =100,col = colors[i], add= TRUE)
}
par(new=TRUE)
hist(rchisq(100000,df=3),breaks = "fd", freq = FALSE,  axes = FALSE, main='', xlab='', ylab='')
legend("topright", inset = .05, labels, lty = rep(1, 4), col = colors)
plot(NULL, type = "l",
xlab = "x value", ylab = "Density", ylim = c(0, 0.30), xlim = c(0, 32.5), main = "chi-square distribution"
)
degf <- c(1, 3, 5, 10)
colors <- c("red", "blue", "darkgreen", "black")
labels <- c("df = 1", "df = 3", "df = 5", "df = 10")
for (i in 1:length(degf)) {
curve(dchisq(x,df=degf[i]),from =1, to = 30, n =100,col = colors[i], add= TRUE)
}
par(new=TRUE)
hist(rchisq(50000,df=3),breaks = "fd", freq = FALSE,  axes = FALSE, main='', xlab='', ylab='')
legend("topright", inset = .05, labels, lty = rep(1, 4), col = colors)
ppoints(4)
?ppoints
?qqplot
?ppoints
ppoints(4)
ppoints(10)
ppoints(x1-x2)
set.seed(123)
x1 <- rnorm(1e4)
x2 <- rnorm(1e4)
ppoints(x1-x2)
qqplot(x1 - x2, qnorm(x1 - x2, sd = sqrt(2)), asp = 1)
qnorm(x1 - x2, sd = sqrt(2))
ppoints([-3,-1,1,3])
ppoints(c(-3,-1,1,3)
)
ppoints(4)
ppoints(c(-1,-1,1,3))
ppoints(c(-1,-1,1,5))
length(x1)
ppoints(length(x1))-ppoints(x1-x2)
?qnorm
qnorm(0.5)
ppoints(4)
?ppoints
ppoints(10)
qqplot(x1 - x2, qnorm(seq(0,1,1e4), sd = sqrt(2)), asp = 1)
seq(0,1,1e4)
seq(0,1,1e4)
ppoints(c(-3,0,3))
ppoints(c(-3,1,2))
qqplot(c(-3,0,3) ,c(-3,1,2))
qqplot(c(-3,0,3) ,c(-3,1,2),asp = 1)
qqplot(c(-3,-1,1,3) ,c(-3,1,2,3),asp = 1)
quantile(rnorm(200),probs = seq(0.01,0.99,0.01))
barplot(observed_haircolours)
barplot(observed_haircolours)
pie(observed_haircolours)
observed_haircolours
table(observed_haircolours)
as.table(observed_haircolours)
plot(as.table(observed_haircolours))
rep(names(observed_haircolours)
)
names(observed_haircolours)
factor(rep(names(observed_haircolours), observed_haircolours))
observed_haircolours
type(observed_haircolours)
class(observed_haircolours)
typeof(observed_haircolours)
class(observed_haircolours)
rep(names(observed_haircolours),5)
rep(names(observed_haircolours),c(1,1,1,2))
seq(from = 1, to = 10, length.out = 10)
oh_factor <- factor(rep(names(observed_haircolours), observed_haircolours))
plot(oh_factor)
plot(rep(names(observed_haircolours),5))
rep(names(observed_haircolours),5)
hist(rep(names(observed_haircolours),5))
barplot(rep(names(observed_haircolours),5))
factor(sample(1000,c(1:5),levels=c("ant", "cat", "dog", "giraffe", "elephant"))
factor(sample(1000,c(1:5)),levels=c("ant", "cat", "dog", "giraffe", "elephant"))
sample(1000,c(1:5))
sample(1000,c(1:5),replace = TRUE)
sample(c(1:5),1000,replace = TRUE)
factor(sample(c(1:5),1000,replace = TRUE),levels=c("ant", "cat", "dog", "giraffe", "elephant"))
factor(sample(c("ant", "cat", "dog", "giraffe", "elephant"),1000))
factor(sample(c("ant", "cat", "dog", "giraffe", "elephant"),1000, replace=TRUE))
#,levels=c("ant", "cat", "dog", "giraffe", "elephant")
set.seed(20171004)
x <- rchisq(500, df = 3)
x
x=sort(x)
x
N = length(x)
t_probs = seq(0.5/N,(N-0.5)/N,by=1/N)
t_probs
qnorm(0)
qnorm(1)
qnorm(0.5)
quantitles = qchisq(t_probs, df=3)
qqplot(x,quantitles)
plot(quantiles, x)
quantiles = qchisq(t_probs, df=3)
plot(quantiles, x)
abline(a = 0, b = 1, col = 'red')
qqplot(x,qchisq(ppoints(500), df = 3))
qqplot(x,qchisq(ppoints(500), df = 3))
qqline(y, distribution = function(p) qchisq(p, df = 3),
prob = c(0.1, 0.6), col = 2)
qqplot(x,qchisq(ppoints(500), df = 3))
qqline(x, distribution = function(p) qchisq(p, df = 3),
prob = c(0.1, 0.6), col = 2)
x <- rchisq(500, df = 3) + 3
qqplot(x,qchisq(ppoints(500), df = 3))
qqline(x, distribution = function(p) qchisq(p, df = 3),
prob = c(0.1, 0.6), col = 2)
set.seed(1212)
B <- 734
N <- 10
N10 <- replicate(B, mean(rnorm(N, mean = 2, sd = 3)))
N <- 100
N100 <- replicate(B, mean(rnorm(N, mean = 2, sd = 3)))
N <- 1000
N1000 <- replicate(B, mean(rnorm(N, mean = 2, sd = 3)))
N10
hist(N10)
nrow <- 5
ncol <- 5
pyramid <- matrix(0, nrow=nrow, ncol=ncol)
for (i in 1:nrow){
for (j in 1:ncol){
pyramid[i, j] <- min(min(i, nrow-i+1), min(j, ncol-j+1))
}
}
# look at the contents:
pyramid
nrow <- 15
ncol <- 15
pyramid <- matrix(0, nrow=nrow, ncol=ncol)
for (i in 1:nrow){
for (j in 1:ncol){
pyramid[i, j] <- min(min(i, nrow-i+1), min(j, ncol-j+1))
}
}
# look at the contents:
pyramid
nrow <- 15
ncol <- 15
pyramid <- matrix(0, nrow=nrow, ncol=ncol)
for (i in 1:nrow){
for (j in 1:ncol){
pyramid[i, j] <- min(i, nrow-i+1,j, ncol-j+1)
}
}
# look at the contents:
pyramid
nrow <- 3
ncol <- 3
pyramid <- matrix(0, nrow=nrow, ncol=ncol)
for (i in 1:nrow){
for (j in 1:ncol){
pyramid[i, j] <- min(i, nrow-i+1,j, ncol-j+1)
}
}
# look at the contents:
pyramid
nrow <- 15
ncol <- 15
pyramid <- matrix(0, nrow=nrow, ncol=ncol)
for (i in 1:nrow){
for (j in 1:ncol){
pyramid[i, j] <- min(i, nrow-i+1,j, ncol-j+1)
}
}
# look at the contents:
pyramid
?contour
pyramid(1,2)
pyramid
pyramid[1,2]
pyramid[2,2]
x <- y <- 1:15
contour(x,y,pyramid[x,y])
x <- y <- 1:15
contour(x,y,pyramid[x,y],nlevels=length(unique(c(pyramid)))
x <- y <- 1:15
contour(x,y,pyramid[x,y],nlevels=length(unique(c(pyramid))
x <- y <- 1:15
contour(x,y,pyramid[x,y],nlevels=length(unique(c(pyramid))))
c(pyramid)
pyramid[x,y]
image(pyramid)
nba <- read.csv("http://datasets.flowingdata.com/ppg2008.csv", sep=",")
nba
row.names(nba) <- nba$Name
nba <- nba[,2:20]
nba
nba_matrix <- data.matrix(nba)
nba_matrix
heatmap(
nba_matrix, Rowv=NA, Colv=NA, col = cm.colors(256),
scale="column", margins=c(5,10))
install.packages('mvtnorm')
sigma_cor <- matrix(c(1, 0.7, 0.7, 1), ncol=2)
sigma_cor
install.packages('mvtnorm.')
install.packages('mvtnorm')
install.packages('mvtnorm')
install.packages('mvtnorm')
package_version('mvtnorm')
library(mvtnorm)
quantiles_seq <- seq(-3, 3, by = 0.1) quantiles <- expand.grid(quantiles_seq, quantiles_seq)
quantiles_seq <- seq(-3, 3, by = 0.1)
quantiles <- expand.grid(quantiles_seq, quantiles_seq)
quantiles
library(mvtnorm)
densities_uncor <- dmvnorm(quantiles) densities_cor <- dmvnorm(quantiles, sigma = sigma_cor)
library(mvtnorm)
densities_uncor <- dmvnorm(quantiles)
densities_cor <- dmvnorm(quantiles, sigma = sigma_cor)
sigma_cor <- matrix(c(1, 0.7, 0.7, 1), ncol=2)
library(mvtnorm)
densities_uncor <- dmvnorm(quantiles)
densities_cor <- dmvnorm(quantiles, sigma = sigma_cor)
densities_cor
densities_uncor_matrix <- matrix(densities_uncor, ncol = sqrt(length(densities_uncor)))
densities_cor_matrix <- matrix(densities_cor, ncol = sqrt(length(densities_cor)))
contour(x = quantiles_seq, y = quantiles_seq, z = densities_uncor_matrix)
contour(x = quantiles_seq, y = quantiles_seq, z = densities_cor_matrix)
my_mystery <- read.table("0_data/mystery.txt")
summary(my_mystery )
hist(my_mystery$x)
hist(my_mystery$y)
plot(my_mystery)
library(hexbin)
install.packages('hexbin')
library(hexbin)
library(hexbin)
plot(hexbin(my_mystery, xbins=100))
?hexbin
smoothScatter(my_mystery, bandwidth = 0.001, nbin=1000)
dtriangle <- function(x){
(x >= 0 & x < 0.5) * 4 * x + (x >= 0.5 & x <= 1) * 4 * (1 - x)
}
curve(dtriangle, asp = 1, from = -0.5, to = 1.5)
integrate(dtriangle, lower = -1, upper = 2)$value
qtriangle <- function(x){
(x >= 0 & x < 0.5) * sqrt(x / 2) + (x >= 0.5 & x <= 1) * (1 - sqrt((1 - x) / 2)) + (x > }
qtriangle <- function(x){(x >= 0 & x < 0.5) * sqrt(x / 2) + (x >= 0.5 & x <= 1) * (1 - sqrt((1 - x) / 2)) + (x >1) }
qtriangle <- function(x){(x >= 0 & x < 0.5) * sqrt(x / 2) + (x >= 0.5 & x <= 1) * (1 - sqrt((1 - x) / 2)) + (x >1) }
curve(qtriangle, from=-1, to=2, add=T, col='red')

table(my_numbers)
my_chars <- sample(letters[1:3], 3e4, replace=T)
table(my_chars)
table(my_numbers, my_chars)
my_data <- data.frame(my_numbers, my_chars)
table(my_data)
table(my_numbers, my_chars)
my_logicals <- sample(c(TRUE, FALSE), N, replace=T)
table(my_numbers, my_chars, my_logicals)
my_data <- cbind(my_data, my_logicals)
table(my_data)
my_array <- array(0, dim = c(2, 3))
my_array
class(my_array)
my_array <- array(1:24, dim = c(4, 3, 2))
class(my_array)
my_array
my_array
my_array[1, 1 , 1]
my_array[, , 1]
my_array[1, , ]
my_array[, 1, ]
my_array <- array(1:120, dim = c(5, 4, 3, 2))
# pff...
my_array
table(my_data)
my_table <- table(my_data)
my_table/ sum(my_table)
my_table/ sum(my_table)
my_data
my_data
my_table
my_table/ sum(my_table)
sum(my_table)
apply(my_table, 3, sum)
apply(my_table, 1, sum)
my_table
apply(my_table, c(1,2), sum)
x = c(1,2,3)
y = c(1,2,NA)
sd(x)
sd(y)
sd(y,na.rm = T)
sd(x)
GiveSD(y)
GiveSD <- function(x, na.rm = T, ...)
{ return(sd(x, na.rm))
}
GiveSD(y)
GiveSD(yï¼ŒF)
GiveSD(y,F)
MyFlexSummary <- function(...)
{ my_mean <- mean(...)
my_sd <- GiveSD(...)
return_list = list( mean = my_mean,sd = my_sd )
names(return_list) <- c("mean", "sd")
return(return_list)
}
MyFlexSummary(1:10)
MyFlexSummary(1:10,trim=0.1)
sd(x, na.rm)
?trim
??trim
MyFlexSummary(1:10)
MyFlexSummary(1:10,trim=0.1)
mean(1:10, trim = )
rnorm(10)
mean(rnorm(10),trim =0.1)
mean(rnorm(10),trim =0.2)
mean(rnorm(10),trim =0.3)
mean(rnorm(10),trim =1)
?mean
?sd
MyFlexSummary(1:10,trim=0.7)
MyFlexSummary(1:10,trim=0.7)
MyFlexSummary(1:10,trim=0.7)
MyFlexSummary(1:10,trim=0.7)
MyFlexSummary(1:10,trim=0.7)
MyFlexSummary(1:10,trim=0.7)
MyFlexSummary(1:10,trim=0.7)
MyFlexSummary(1:10,trim=0.7)
MyFlexSummary(1:10,trim=0.7)
MyFlexSummary(1:10,trim=0.7)
?mean
MyFlexSummary(1:10,trim=0.4)
MyFlexSummary(1:100,trim=0.4)
MyFlexSummary(1:100,trim=0.4)
MyFlexSummary(1:100,trim=0.4)
MyFlexSummary(1:100,trim=0.4)
MyFlexSummary(1:100,trim=0.4)
MyFlexSummary(1:100,trim=0.4)
MyFlexSummary(1:100,trim=0.4)
MyFlexSummary(1:100,trim=0.1)
MyFlexSummary(1:100,trim=0.1)
MyFlexSummary(1:100,trim=0.1)
MyFlexSummary(1:100,trim=0.1)
MyFlexSummary(4:100,trim=0.1)
MyFlexSummary(4:100,trim=0.1)
MyFlexSummary(4:100,trim=0.1)
MyFlexSummary(4:100,trim=0.2)
MyFlexSummary(4:100,trim=0.2)
MyFlexSummary(4:100,trim=0.2)
MyFlexSummary(4:100,trim=0.2)
MyFlexSummary(nrand(50),trim=0.2)
MyFlexSummary(rnorm(50),trim=0.2)
MyFlexSummary(rnorm(50),trim=0.2)
MyFlexSummary(rnorm(50),trim=0.2)
MyFlexSummary(c(rnorm(100), NA), na.rm = TRUE, trim = 0.1)
MyFlexSummary(c(rnorm(100), NA), na.rm = TRUE, trim = 0.1)
set.seed(2017)
N <- 500
my_data_frame <- data.frame(
species = sample(
c("elephant", "giraffe", "monkey", "snake"),
N,
replace = TRUE
),
hair_colour = sample(
c("blonde", "brown", "red"), N, replace = TRUE
),
iq = sample(
c("70-79", "80-89", "90-99", "100-109", "110-119", "120-129"),
N,
replace = T
)
)
my_data_frame
my_data_frame$iq
levels(factor(my_data_frame$iq))
levels(factor(my_data_frame$iq))[c(4, 5, 6, 1, 2, 3)])
levels(factor(my_data_frame$iq))[c(4, 5, 6, 1, 2, 3)]
my_data_frame$iq <- factor(my_data_frame$iq, levels = levels(factor(my_data_frame$iq))[c(4, 5, 6, 1, 2, 3)])
my_data_frame$iq
my_data_frame$iq <- factor(my_data_frame$iq, levels = levels(factor(my_data_frame$iq))[c(4, 5, 6, 1, 2, 3)])
table(my_data_frame)
my_data_frame.columns
my_data_frame = my_data_frame(c('iq','hair_colour','species'))
my_data_frame = my_data_frame[c('iq','hair_colour','species')]
table(my_data_frame)
#my_data_frame = my_data_frame[c('iq','hair_colour','species')]
table(my_data_frame[, c(1, 3, 2)])
#my_data_frame = my_data_frame[c('iq','hair_colour','species')]
my_table = table(my_data_frame[, c(1, 3, 2)])
my_table
apply(my_table,1,sum)
apply(my_table,c(1,2),sum)
apply(my_table,c(1,2,3),sum)
my_table["monkey", "110-119", "blonde"]
#my_data_frame = my_data_frame[c('iq','hair_colour','species')]
my_table = table(my_data_frame[, c(1, 3, 2)])
my_table["monkey", "110-119", "blonde"]
my_table
my_table[ "110-119","monkey", "blonde"]
apply(my_table,c(1,2),sum)
apply(my_table,c(1,3),sum)
apply(my_table,c(3),sum)
apply(my_table,c(2),sum)
apply(my_table,c(1),sum)
apply(my_table,c(1,2),sum)
apply(my_table,c(1,2),sum)['90-99]
ans = apply(my_table,c(1,2),sum)
ans.type
type(ans)
class(ans)
ans
ans = apply(my_table,c(1,2),sum)['90-99',]
apply(my_table,c(1,2),sum)['90-99',]
apply(my_table,c(1,2),sum)#['90-99',]
apply(my_table, c(1, 3), sum)
v <- rnorm(1000)
v <- rnorm(1000)
v2 <- rnorm(1000)
v1 <- rnorm(1000)
v2 <- rnorm(1000)
?cut
f1 = cut(v1,breaks = 10)
f2 = cut(v2,breaks = 10)
class(f1)
#factor
f1
t1 = table(f1)
t2 = table(f2)
t1
t2
?quantile
quantile(v1)
quantile(v1, probs = seq(0,1,0.1))
f3 = cut(v1,breaks = quantile(v1, probs = seq(0,1,0.1)))
f3 = cut(v1,breaks = quantile(v1, probs = seq(0,1,0.1)))
table(f3)
table(f1,f2)
f3 = cut(v1,breaks = quantile(v1, probs = seq(0,1,0.1)))
f4 = cut(v2,breaks = quantile(v1, probs = seq(0,1,0.1)))
table(f3)
table(f3,f4)
set.seed(20141120)
dat <- data.frame(
id = sample(gl(20, 5), replace = TRUE),
y = rnorm(100, 10),
time = rep(1:5, 20),
gender = factor(
NA,
levels = 1:3,
labels = c("male", "female", "other")
),
age = NA,
treat = factor(
NA,
levels = 1:3,
labels = c("placebo", "active", "control")
)
)
dat <- dat[order(dat$id), ]  # order the rows of dat by id
set.seed(20141120)
dat <- data.frame(
id = sample(gl(20, 5), replace = TRUE),
y = rnorm(100, 10),
time = rep(1:5, 20),
gender = factor(
NA,
levels = 1:3,
labels = c("male", "female", "other")
),
age = NA,
treat = factor(
NA,
levels = 1:3,
labels = c("placebo", "active", "control")
)
)
#dat <- dat[order(dat$id), ]  # order the rows of dat by id
dat
?gl
set.seed(20141120)
dat <- data.frame(
id = sample(gl(20, 5), replace = TRUE),
y = rnorm(100, 10),
time = rep(1:5, 20),
gender = factor(
NA,
levels = 1:3,
labels = c("male", "female", "other")
),
age = NA,
treat = factor(
NA,
levels = 1:3,
labels = c("placebo", "active", "control")
)
)
dat <- dat[order(dat$id), ]  # order the rows of dat by id
gl(2, 8, labels = c("Control", "Treat"))
gl(20, 5)
dat
attributes(dat$gender)
attributes(dat$gender)
gndr.att <- attributes(dat$gender)
dat[['gender']] <- sample(c("male", "female"), 100, replace = TRUE)[dat$id] # becomes character!
attributes(dat$gender)
attributes(dat$gender) <- gndr.att
attributes(dat$gender)
gndr.att <- attributes(dat$gender)
dat[['gender']] <- sample(c("male", "female"), 100, replace = TRUE)[dat$id] # becomes character!
attributes(dat$gender)
attributes(dat$gender) <- gndr.att
attributes(dat$gender)
gndr.att <- attributes(dat$gender)
dat[['gender']] <- sample(c("male", "female"), 100, replace = TRUE)[dat$id] # becomes character!
attributes(dat$gender)
attributes(dat$gender) <- gndr.att
sample(c("male", "female"), 100, replace = TRUE)
sample(c("male", "female"), 100, replace = TRUE)[dat$id]
dat$id
attributes(dat$gender)
attributes(dat$gender) <- gndr.att
attributes(dat$gender)
attributes(dat$gender)
set.seed(20141120)
dat <- data.frame(
id = sample(gl(20, 5), replace = TRUE),
y = rnorm(100, 10),
time = rep(1:5, 20),
gender = factor(
NA,
levels = 1:3,
labels = c("male", "female", "other")
),
age = NA,
treat = factor(
NA,
levels = 1:3,
labels = c("placebo", "active", "control")
)
)
dat <- dat[order(dat$id), ]  # order the rows of dat by id
attributes(dat$gender)
gndr.att <- attributes(dat$gender)
dat[['gender']] <- sample(c("male", "female"), 100, replace = TRUE)[dat$id] # becomes character!
attributes(dat$gender)
attributes(dat$gender) <- gndr.att
sample(c("male", "female"), 100)
dat
sample(c("male", "female"), 100, replace = TRUE)
dat$id
a = sample(c("male", "female"), 100, replace = TRUE)
a[[1,1,1]]
a[c(1,1,1)]
a[c(1,3,3)]
a
a[c(1,4,4)]
sample(c("male", "female"),20, replace = TRUE)[dat$id]
dat[['gender']]=factor(
sample(c("male", "female"),20, replace = TRUE)[dat$id]
levels = 1:3,
dat[['gender']]=factor(
sample(c("male", "female"),20, replace = TRUE)[dat$id],
levels = 1:3,
labels = c("male", "female", "other")
)
dat
dat[['gender']]=factor(
sample(c("male", "female"),20, replace = TRUE)[dat$id],
levels = 1:3,
labels = c("male", "female", "other")
)
dat
dat$gender=factor(
sample(c("male", "female"),20, replace = TRUE)[dat$id],
levels = 1:3,
labels = c("male", "female", "other")
)
dat
dat$gender=factor(
sample(c("male", "female"),20, replace = TRUE)[dat$id],
levels = 1:3,
labels = c("male", "female", "other")
)
dat
dat[['gender']]
dat$gender
factor(
sample(c("male", "female"),20, replace = TRUE)[dat$id],
levels = 1:3,
labels = c("male", "female", "other")
)
sample(c("male", "female"),20, replace = TRUE)[dat$id]
dat$gender=factor(
sample(c("male", "female"),20, replace = TRUE)[dat$id],
levels = c("male", "female", "other")
labels = c("male", "female", "other")
dat$gender=factor(
sample(c("male", "female"),20, replace = TRUE)[dat$id],
#levels = c("male", "female", "other")
#labels = c("male", "female", "other")
)
dat
attributes(dat$gender)
class(LETTERS)
class(LETTERS[1:10])
list("male", "female", "other")
class(list("male", "female", "other"))
class(c("male", "female", "other"))
dat$age <- unlist(
sapply(X = unique(dat$id), # line 4
FUN = function(i) {
age.id <- sort(sample(x = 18:55, size = 5, replace = TRUE)) # line 1
out <- age.id[dat$time[dat$id == i]] # line 2
return(out)
} # line 3.
)
) # line 5
dat
age.id <- sort(sample(x = 18:55, size = 5, replace = TRUE))
age.id
age.id[dat$time[dat$id == sapply(X = unique(dat$id)]]
age.id[dat$time[dat$id == unique(dat$id)]]
dat
unique(dat$id)
dat$id == unique(dat$id)
?sapply
sort(sample(x = 18:55, size = 5, replace = TRUE))
sort(sample(x = 18:55, size = 5, replace = TRUE))
age.id <- sort(sample(x = 18:55, size = 5, replace = TRUE))
age.id[dat$time[dat$id == 1]]
dat$id == 1
dat$time[dat$id == 1]
dat$time
cut(dat$age, c(18, 35, 45, 55), label = 1:3, include.lowest = TRUE, right = FALSE)
cut(dat$age, c(18, 35, 45, 55), label = 1:3, include.lowest = TRUE)
?cut
tabdat1 <- with(dat, table(gender, treat, cat_age))
dat$cat_age <- cut(dat$age, c(18, 35, 45, 55), label = 1:3, include.lowest = TRUE, right = FALSE)
tabdat1 <- with(dat, table(gender, treat, cat_age))
tabdat1
tabdat2 <- with(dat, table(gender[drop = T], treat[drop = T], cat_age))
tabdat2
gender[drop = T]
dat,gender[drop = T]
dat.gender[drop = T]
dat.gender
dat
dat$gender[drop = T]
dat$gender
with(dat, table(gender, treat, cat_age))
with(dat, table(gender[drop = T], treat[drop = T], cat_age))
print(with(dat, table(gender[drop = T], treat[drop = T], cat_age)))
dat, table(gender[drop = T], treat[drop = T], cat_age)
with(dat, table(gender[drop = T], treat[drop = T], cat_age))
with(dat, table(gender[drop = T], treat[drop = T], cat_age))[1]
with(dat, table(gender[drop = T], treat[drop = T], cat_age))[2]
with(dat, table(gender[drop = T], treat[drop = T], cat_age))[3]
with(dat, table(gender[drop = T], treat[drop = T], cat_age))[1,1,1]
with(dat, table(gender[drop = T], treat[drop = T], cat_age))[1,1]
with(dat, table(gender[drop = T], treat[drop = T], cat_age))
dat$age <- unlist(
sapply(X = unique(dat$id), # line 4
FUN = function(i) {
age.id <- sort(sample(x = 18:55, size = 5, replace = TRUE)) # line 1 out <- age.id[dat$time[dat$id == i]] # line 2
return(out)
} # line 3.
)
) # line 5
gndr.att <- attributes(dat$gender)
dat$gender <- sample(1:2,20, replace = TRUE)[dat$id] attributes(dat$gender) <- gndr.att
trt.att <- attributes(dat$treat)
dat$treat <- sample(1:2,20, replace = TRUE)[dat$id] attributes(dat$treat) <- trt.att
set.seed(20141120)
dat <- data.frame(
id = sample(gl(20, 5), replace = TRUE),
y = rnorm(100, 10),
time = rep(1:5, 20),
gender = factor(
NA,
levels = 1:3,
labels = c("male", "female", "other")
),
age = NA,
treat = factor(
NA,
levels = 1:3,
labels = c("placebo", "active", "control")
)
)
dat <- dat[order(dat$id), ]  # order the rows of dat by id
gndr.att <- attributes(dat$gender)
dat$gender <- sample(1:2,20, replace = TRUE)[dat$id] attributes(dat$gender) <- gndr.att
trt.att <- attributes(dat$treat)
dat$treat <- sample(1:2,20, replace = TRUE)[dat$id] attributes(dat$treat) <- trt.att
gndr.att <- attributes(dat$gender)
dat$gender <- sample(1:2,20, replace = TRUE)[dat$id] attributes(dat$gender) <- gndr.att
input.dupl <- interaction(dat$id, dat$time)
input.dupl
?interaction
a <- gl(2, 4, 8)
b <- gl(2, 2, 8, labels = c("ctrl", "treat"))
s <- gl(2, 1, 8, labels = c("M", "F"))
interaction(a, b)
gl(2, 4, 8)
?gl
gl(2, 2, 8)
interaction(s, b)
s
tapply(dat$y, dat$id, mean)
tapply(dat$y, dat$id, mean)[dat$id]
dat$mean.y <- ave(dat$y, dat$id)
ave(dat$y, dat$id)
?ave
?tapply
tapply(dat$y, mean)
cat("Entering the first layer\n")
cat("Inside the first layer a is:", a, "\n")
cat("Inside the first layer b is:", b, "\n")
a <- 1
b <- "one"
cat("Entering the first layer\n")
cat("Inside the first layer a is:", a, "\n")
cat("Inside the first layer b is:", b, "\n")
a <- 2
cat("Inside the first layer a was changed to:", a, "\n")
cat("Entering the second layer\n")
cat("Inside the second layer a is:", a, "\n")
cat("Inside the second layer b is:", b, "\n")
a <- 3
b <- "two"
cat("Inside the second layer a was changed to:", a, "\n")
cat("Inside the second layer b was changed to:", b, "\n")
cat("Inside the first layer a is now:", a, "\n")
cat("Inside the first layer b is now:", b, "\n")
a <- 1
b <- "one"
FirstLayer <- function(){
cat("Entering the first layer\n")
cat("Inside the first layer a is:", a, "\n")
cat("Inside the first layer b is:", b, "\n")
a <- 2
cat("Inside the first layer a was changed to:", a, "\n")
SecondLayer()
cat("Inside the first layer a is now:", a, "\n")
cat("Inside the first layer b is now:", b, "\n")
}
SecondLayer <- function(){
cat("Entering the second layer\n")
cat("Inside the second layer a is:", a, "\n")
cat("Inside the second layer b is:", b, "\n")
a <- 3
b <- "two"
cat("Inside the second layer a was changed to:", a, "\n")
cat("Inside the second layer b was changed to:", b, "\n")
cat("Exiting the second layer\n")
return(NULL)
}
FirstLayer()
